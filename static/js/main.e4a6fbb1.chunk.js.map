{"version":3,"sources":["assets/logo.svg","Components/Header.js","Components/Menu.js","helpers/String.js","Components/Product.js","App.js","helpers/Client.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","this","props","title","slogan","React","Component","Menu","Menu_Items","links","Items","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","categories","loaded","setState","toConsumableArray","Set","map","link","Categoria","items","index","key","href","slugify","string","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","Product","visto","objectSpread","item","event","preventDefault","onEditarProducto","bind","_this2","console","table","Precio","prompt","Stock","onActualizarProducto","url","concat","idProducto","Nombre","estilo","Imagen","Marca","Presentacion","onClick","verProducto","data-toggle","data-target","editarProducto","borrarProducto","API","fetch","data","json","objects","App","products","actualizarEstado","assertThisInitialized","getData","then","productos","product","borrar","arguments","length","undefined","nuevo","filter","productItemFromList","oldProduct","id","window","localStorage","setItem","JSON","stringify","_this3","Components_Product","Components_Header","tile","Components_Menu","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4a6fbb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from '../assets/logo.svg';\r\n\r\nclass Header extends React.Component {\r\n  render(){\r\n    return (\r\n      <header className=\"jumbotron jumbotron-fluid text-center py-3 m-0\">\r\n        <img src={logo} className=\"w-50\" alt={this.props.title}/>\r\n        <h1>{this.props.title}</h1>\r\n        <h2>{this.props.slogan}</h2>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\n//import slugify from '../helpers/String.js'\r\nclass Menu extends Component{\r\n  render(){\r\n    return(\r\n      <nav className=\"container-fluid\">\r\n        <ul className=\"nav nav-pills nav-fill\">\r\n          <Items links={this.props.links}/>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nclass Items extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      categories : [],\r\n      loaded: false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.setState({\r\n      categories: [ ...new Set(this.props.links.map(link => link.Categoria))],\r\n      loaded : true\r\n    })\r\n  }\r\n  render(){\r\n      //const items= this.props.links.map( (link,index) => <li className=\"nav-item\" key={index}><a className=\"nav-link\" href=\"#\">{link.categoria}</a></li>)\r\n      const items= this.state.categories.map( (link,index) =>\r\n      (<li className=\"nav-item\" key={index}>\r\n        <a className=\"nav-link btn-info m-1\" href={link}>{link}</a>\r\n      </li>))\r\n\r\n      if(!this.state.loaded){\r\n        return <li>Cargando...</li>\r\n      }else {\r\n          return items\r\n      }\r\n    }\r\n/*\r\n  function slugify(string) {\r\n    const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœøṕŕßśșțùúüûǘẃẍÿź·/_,:;'\r\n    const b = 'aaaaaaaaceeeeghiiiimnnnooooooprssstuuuuuwxyz------'\r\n    const p = new RegExp(a.split('').join('|'), 'g')\r\n    return string.toString().toLowerCase()\r\n      .replace(/\\s+/g, '-') // Replace spaces with -\r\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\r\n      .replace(/&/g, '-and-') // Replace & with ‘and’\r\n      .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\r\n      .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\r\n      .replace(/^-+/, '') // Trim - from start of text\r\n      .replace(/-+$/, '') // Trim - from end of text\r\n  }\r\n  */\r\n}\r\n\r\nexport default Menu;\r\n","const slugify = (string) => { //<-- Convertir texto a URL Friendly :D\r\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœøṕŕßśșțùúüûǘẃẍÿź·/_,:;'\r\n  const b = 'aaaaaaaaceeeeghiiiimnnnooooooprssstuuuuuwxyz------'\r\n  const p = new RegExp(a.split('').join('|'), 'g')\r\n  return string.toString().toLowerCase()\r\n      .replace(/\\s+/g, '-') // Replace spaces with -\r\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\r\n      .replace(/&/g, '-and-') // Replace & with ‘and’\r\n      .replace(/[^\\w-]+/g, '') // Remove all non-word characters\r\n      .replace(/--+/g, '-') // Replace multiple - with single -\r\n      .replace(/^-+/, '') // Trim - from start of text\r\n      .replace(/-+$/, '') // Trim - from end of text\r\n  }\r\n\r\nexport default slugify;\r\n","import React, {Component} from 'react';\r\nimport slugify from '../helpers/String.js'\r\n\r\nclass Product extends Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      visto : false,\r\n      loaded : false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      ...this.props.item,\r\n      loaded: true\r\n    })\r\n  }\r\n\r\n  verProducto(event){\r\n    event.preventDefault();\r\n    this.setState({visto:true})\r\n    this.props.onEditarProducto().bind(this);\r\n  }\r\n\r\n  editarProducto(){\r\n    console.table(this.state)\r\n    this.setState({\r\n      Precio: prompt(\"Ingrese nuevo Precio\"),\r\n      Stock: prompt(\"Ingrese stock\")\r\n    },() => this.props.onActualizarProducto(this.state) )\r\n    //console.log(this.state.products[13]);\r\n  }\r\n\r\n  borrarProducto(){\r\n    console.table(this.state)\r\n    this.props.onActualizarProducto(this.state, true)\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.loaded){\r\n      return <div className=\"col-6 col-md-4 my-2\">Creando producto...</div>\r\n    }else{\r\n    const url = `/MR-${this.state.idProducto}-${slugify(this.state.Nombre)}`\r\n    const estilo = (this.state.visto) ? \"card bg-dark\": \"card bg-light\"\r\n      return (\r\n        <article className=\"col-6 col-md-4 my-2\">\r\n          <div className={estilo} >\r\n            <img src={this.state.Imagen} className=\"card-img-top w-100\" alt=\"\"/>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{this.state.Marca} - {this.state.Nombre}</h5>\r\n              <p className=\"card-text\">{this.state.Presentacion}</p>\r\n              <p><span className=\"badge badge-primary\">${this.state.Precio}</span></p>\r\n              <a href={url} onClick={this.verProducto.bind(this)} className=\"btn btn-primary\">Ver +</a>\r\n              <button className=\"btn btn-success mx-2\" data-toggle=\"modal\" data-target=\"#react-modal\" onClick={this.editarProducto.bind(this)}>Editar</button>\r\n              <button className=\"btn btn-danger my-2\" data-toggle=\"modal\" data-target=\"#react-modal\" onClick={this.borrarProducto.bind(this)}>Borrar</button>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      )\r\n  }\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\nimport Header from './Components/Header'\nimport Menu from './Components/Menu'\nimport Product from './Components/Product'\n//import productos from './productos.json'\n\nimport Client from './helpers/Client'\n//import './assets/App.css';\n\nconst API = new Client()\n/*\nCilclo de vida de un componente:\n1) constructor()        --> Setear el estado inicial\n2) ComponentWIllMount() --> Trabajar con datos asincronicos.\n3) ComponentDidMount()  --> Trabajar con datos Sincronicos\n4) render()             --> Armar la intergaz grafica, segun el estado.\n*/\n\nclass App extends React.Component {\nconstructor(){\n  super();\n  this.state={\n    title: \"MercadoReact\",\n    slogan: \"Mucho Mas que JS\",\n    //products: [\"Musica\", \"Deportes\", \"Electro\",\"Pesca\"]\n    products: [],\n    loaded : false\n    /*\n    [\n      {nombre: \"Guitarra Criolla\",precio:1200,stock:30,categoria:\"Música\"},\n      {nombre: \"Paleta Ping Pong x2\",precio:350,stock:600,categoria:\"Deportes\"},\n      {nombre: \"Microondas\",precio:8200,stock:100,categoria:\"Electro\"},\n      {nombre: \"Pelota Basket\",precio:900,stock:220,categoria:\"Deportes\"},\n      {nombre: \"Marcadores Color\",precio:85,stock:400,categoria:\"Librería\"}\n    ]*/\n  }\n  this.actualizarEstado = this.actualizarEstado.bind(this)\n}\n\ncomponentWillMount(){\n  //API.getData(\"https://api.myjson.com/bins/fb377\")\n  API.getData(\"https://api.myjson.com/bins/dcg2p\")\n  .then((productos)=>{\n    this.setState({products:productos,loaded:true})\n  })\n  /*\n  fetch(\"https://api.myjson.com/bins/fb377\")\n    .then(\n      (response)=>{\n        ;//LLamado\n        return response.json()\n      })\n    .then((productos)=>{\n      this.setState({products:productos,loaded:true})\n    })\n    */\n}\n\n  actualizarEstado(product, borrar = false){\n    let nuevo= []\n\n    if(!borrar){\n      nuevo = this.state.products.map(\n                oldProduct =>  (oldProduct.id === product.id) ? product: oldProduct\n              )\n\n      /*\n      this.setState({products : this.state.products.map(\n          oldProduct =>  (oldProduct.id === product.id) ? product: oldProduct\n        )})\n        */\n    }else{\n      nuevo = this.state.products.filter(\n                productItemFromList =>  productItemFromList.idProducto !== product.idProducto\n              )\n      /*\n      const listProducts= this.state.products.filter(\n        productItemFromList =>  productItemFromList.idProducto !== product.idProducto\n      )\n      console.table(listProducts)\n      this.setState({products: listProducts});\n      */\n      /*\n      this.setState({products : this.state.products.filter(\n        function (productItemFromList) {\n            console.log(\"To Be Deleted: \"+productItemFromList.idProducto)\n            console.log(\"Product Individual: \"+product.idProducto)\n            console.log(\"To Be Returned: \",productItemFromList.idProducto !== product.idProducto)\n            return productItemFromList.idProducto !== product.idProducto\n         }\n      )}\n    )*/\n  }\n    this.setState({products : nuevo}, () =>{\n      window.localStorage.setItem('_products', JSON.stringify(nuevo)) // Actualizo storage con callback\n    })\n  }\n\n  render(){\n    if(!this.state.loaded){\n      return <div>Iniciando App..</div>\n    }\n    else{\n      const productos = this.state.products.map(\n        (product, index) => {\n          return <Product item={product} key={product.idProducto} onActualizarProducto={this.actualizarEstado} />\n          }\n      )\n\n      return (\n        // ****************** Se Ponen los Componetes ****************** //\n          <div className=\"App\">\n            <Header title={this.state.tile} slogan={this.state.slogan}/>\n            <button onClick={this.actualizarEstado}>Actualizar Estado</button>\n            <Menu links={this.state.products}/>\n            <section className=\"container-fluid\">\n              <div className=\"row\">{productos}</div>\n            </section>\n          </div>\n\n        );\n\n    }\n    }\n}\nexport default App;\n","class Client{\r\n  /*\r\n  getData(url){\r\n    return fetch(url).then(\r\n      (data)=>{\r\n          return data.json()\r\n      })\r\n  } */\r\n  async getData(url){\r\n    let objects;\r\n    let data;\r\n    //if(!window.localStorage.getItem(\"_products\")){\r\n      data = await fetch(url) //obtener el json\r\n      objects = await data.json(); //convertir a Object\r\n      //await window.localStorage.setItem(\"_products\", JSON.stringify(objects))\r\n      //}else{\r\n      //data = await window.localStorage.getItem(\"_products\")\r\n      //objects = await JSON.parse(data)\r\n    //}\r\n    return objects;\r\n  }\r\n}\r\nexport default Client\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}